@model IDemotivator.Demotivator

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #canvas-container {
            position: relative;
            top:-10px;
            left:800px;
            width: 600px;
            height: 370px;
            box-shadow: 0 0 5px 1px black;
            margin: 0px auto;
            border: 5px solid transparent;
            left:150px;
        }
        #canvas-container.over {
            border: 1px dashed #000000;
</style>
<h2 >Create</h2>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       
        <div id="canvas-container" >
            <canvas id="canvas" width="600" height="370"></canvas>
        </div>
        <div class="form-group" style="position:fixed; left:50px; top:150px;">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group" style="position:fixed; left:50px; top:200px; width:270px;">
            @Html.LabelFor(model => model.Str1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Str1, new { htmlAttributes = new { @class = "form-control", id = "str11"} })
                @Html.ValidationMessageFor(model => model.Str1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="position:fixed; left:50px; top:250px; width:270px;">
            @Html.LabelFor(model => model.Str2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Str2, new { htmlAttributes = new { @class = "form-control", id = "str22"} })
                @Html.ValidationMessageFor(model => model.Str2, "", new { @class = "text-danger" })
            </div>
        </div>
        <form id="fileUpload" action="@Url.Action("AddImage")" method="POST" enctype="multipart/form-data" >

                <input id="fileInput" type="file" class="btn btn-default" style="position:fixed; left:50px; top:300px;" />
                <input type="button" value="Upload file" class="btn btn-success" id="btnFileUpload" style="position:fixed; left:350px; top:300px;" />
          </form>

        @Html.EditorFor(model => model.Url_Img, new { htmlAttributes = new { @class = "form-control", id = "Url_Img", type = "hidden" } })
        @Html.EditorFor(model => model.Url_Img_Origin, new { htmlAttributes = new { @class = "form-control", id = "Url_Img_Origin", type = "hidden" } })
        @Html.EditorFor(model => model.JSON, new { htmlAttributes = new { @class = "form-control", id = "JSON", type = "hidden" } })


        <div class="form-group" style="position:fixed; left:150px; top:400px; display:inline-block;">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="create" /> 
            </div>
        </div>
        <div class="form-group" style="position:fixed; left:50px; top:400px; display:inline-block;">
            <div class="col-md-offset-2 col-md-10">   
                <input type="button" value="Preview" id="textin" class="btn btn-default" />
            </div>
        </div>

    </div>
}
<div>
</div>
<img id="im" />
<script src="~/Scripts/fabric.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/DemoCreate.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}